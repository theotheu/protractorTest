Installing Protractor with selenium webdriver
=============================================

webdev@dev01~# sudo npm install -g protractor

webdev@dev01~# sudo apt-get install -q -y xvfb
webdev@dev01~# sudo vi /etc/init.d/xvfb
# copy text below into 
#!/bin/bash
#
# Xvfb init script for Debian-based distros.
#
# The display number used must match the DISPLAY environment variable used
# for other applications that will use Xvfb. e.g. ':10'.
#
# From: https://github.com/gmonfort/xvfb-init/blob/master/Xvfb
#
### BEGIN INIT INFO
# Provides:      	xvfb
# Required-Start:	$remote_fs $syslog
# Required-Stop: 	$remote_fs $syslog
# Default-Start: 	2 3 4 5
# Default-Stop:  	0 1 6
# Short-Description: Start/stop custom Xvfb
# Description:   	Enable service provided by xvfb
### END INIT INFO
 
NAME=Xvfb
DESC="$NAME - X Virtual Frame Buffer"
SCRIPTNAME=/etc/init.d/$NAME
XVFB=/usr/bin/Xvfb
PIDFILE=/var/run/${NAME}.pid
 
# Using -extension RANDR doesn't seem to work anymore. Firefox complains
# about not finding extension RANDR whether or not you include it here.
# Fortunately this is a non-fatal warning and doesn't stop Firefox from working.
XVFB_ARGS=":10 -extension RANDR -noreset -ac -screen 10 1024x768x16"
 
set -e
 
if [ `id -u` -ne 0 ]; then
  echo "You need root privileges to run this script"
  exit 1
fi
 
[ -x $XVFB ] || exit 0
 
. /lib/lsb/init-functions
 
[ -r /etc/default/Xvfb ] && . /etc/default/Xvfb
 
case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    if start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE \
          --background --make-pidfile --exec $XVFB -- $XVFB_ARGS ; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
    log_end_msg $?
    ;;
 
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE --retry 5
    if [ $? -eq 0 ] && [ -f $PIDFILE ]; then
      /bin/rm -rf $PIDFILE
    fi
    log_end_msg $?
    ;;
 
  restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    $0 stop && sleep 2 && $0 start
    ;;
 
  status)
    status_of_proc -p $PIDFILE $XVFB $NAME && exit 0 || exit $?
    ;;
 
  *)
    log_action_msg "Usage: ${SCRIPTNAME} {start|stop|status|restart|force-reload}"
    exit 2
    ;;
esac
exit 0

webdev@dev01~# sudo chown root:root /etc/init.d/xvfb
webdev@dev01~# sudo chmod a+x /etc/init.d/xvfb
webdev@dev01~# sudo update-rc.d xvfb defaults

webdev@dev01~# sudo apt-get install -q -y x11-xkb-utils xfonts-100dpi xfonts-75dpi xfonts-scalable xserver-xorg-core dbus-x11 libfontconfig1-dev chromium-browser firefox imagemagick git

webdev@dev01~# sudo npm install -g phantomjs

webdev@dev01~# sudo npm install -g chromedriver

webdev@dev01~# Java should be installed, see procedure else in this document 
webdev@dev01~# sudo apt-get install -q -y default-jdk

webdev@dev01~# sudo /usr/sbin/useradd -m -s /bin/bash -d /home/selenium selenium
webdev@dev01~# sudo mkdir /usr/local/share/selenium
webdev@dev01~# wget http://selenium.googlecode.com/files/selenium-server-standalone-2.37.0.jar
webdev@dev01~# sudo mv selenium-server-standalone-2.37.0.jar /usr/local/share/selenium
webdev@dev01~# sudo chown -R selenium:selenium /usr/local/share/selenium
webdev@dev01~# sudo mkdir /var/log/selenium
webdev@dev01~# sudo chown selenium:selenium /var/log/selenium

webdev@dev01~# sudo vi /etc/init.d/selenium

#!/bin/bash
#
# Selenium standalone server init script.
#
# For Debian-based distros.
#
### BEGIN INIT INFO
# Provides:      	selenium-standalone
# Required-Start:	$local_fs $remote_fs $network $syslog
# Required-Stop: 	$local_fs $remote_fs $network $syslog
# Default-Start: 	2 3 4 5
# Default-Stop:  	0 1 6
# Short-Description: Selenium standalone server
### END INIT INFO
 
DESC="Selenium standalone server"
USER=selenium
JAVA=/usr/bin/java
PID_FILE=/var/run/selenium.pid
JAR_FILE=/usr/local/share/selenium/selenium-server-standalone-2.37.0.jar
LOG_FILE=/var/log/selenium/selenium.log
 
DAEMON_OPTS="-Xmx500m -Xss1024k -jar $JAR_FILE -log $LOG_FILE"
# See this Stack Overflow item for a delightful bug in Java that requires the
# strange-looking java.security.egd workaround below:
# http://stackoverflow.com/questions/14058111/selenium-server-doesnt-bind-to-socket-after-being-killed-with-sigterm
DAEMON_OPTS="-Djava.security.egd=file:/dev/./urandom $DAEMON_OPTS"
 
# The value for DISPLAY must match that used by the running instance of Xvfb.
export DISPLAY=:10
 
# Make sure that the PATH includes the location of the ChromeDriver binary.
# This is necessary for tests with Chromium to work.
export PATH=$PATH:/usr/local/bin
 
case "$1" in
    start)
        echo "Starting $DESC: "
        start-stop-daemon -c $USER --start --background \
            --pidfile $PID_FILE --make-pidfile --exec $JAVA -- $DAEMON_OPTS
        ;;
 
    stop)
        echo  "Stopping $DESC: "
        start-stop-daemon --stop --pidfile $PID_FILE
        ;;
 
    restart)
        echo "Restarting $DESC: "
        start-stop-daemon --stop --pidfile $PID_FILE
        sleep 1
        start-stop-daemon -c $USER --start --background \
            --pidfile $PID_FILE  --make-pidfile --exec $JAVA -- $DAEMON_OPTS
        ;;
 
    *)
        echo "Usage: /etc/init.d/selenium-standalone {start|stop|restart}"
        exit 1
    ;;
esac
 
exit 0

webdev@dev01~# sudo chown root:root /etc/init.d/selenium
webdev@dev01~# sudo chmod a+x /etc/init.d/selenium
webdev@dev01~# sudo update-rc.d selenium defaults

webdev@dev01~# sudo touch /phantomjsdriver.log
webdev@dev01~# sudo chmod 666 /phantomjsdriver.log

webdev@dev01~# sudo webdriver-manager update

webdev@dev01~# sudo service xvfb start
webdev@dev01~# sudo service selenium start

Use the repository on https://github.com/theotheu/protractorTest.git

webdev@dev01~# git clone https://github.com/theotheu/protractorTest.git testProtractor
webdev@dev01~# cd testProtractor
webdev@dev01~# protractor conf.js
Using the selenium server at http://localhost:4444/wd/hub
angularjs homepage
    should greet the named user
Finished in 4.98 seconds
1 test, 1 assertion, 0 failures
